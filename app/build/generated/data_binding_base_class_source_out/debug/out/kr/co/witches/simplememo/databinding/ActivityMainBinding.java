// Generated by data binding compiler. Do not edit!
package kr.co.witches.simplememo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import java.lang.Deprecated;
import java.lang.Object;
import kr.co.witches.simplememo.R;
import kr.co.witches.simplememo.data.database.viewmodel.MemoViewModel;
import kr.co.witches.simplememo.ui.main.MainActivity;
import kr.co.witches.simplememo.ui.main.MainViewModel;

public abstract class ActivityMainBinding extends ViewDataBinding {
  @NonNull
  public final Button btnAddMemo;

  @NonNull
  public final CheckBox btnFavorite;

  @Bindable
  protected MainActivity mMainActivity;

  @Bindable
  protected MainViewModel mMainViewModel;

  @Bindable
  protected MemoViewModel mMemoViewModel;

  protected ActivityMainBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Button btnAddMemo, CheckBox btnFavorite) {
    super(_bindingComponent, _root, _localFieldCount);
    this.btnAddMemo = btnAddMemo;
    this.btnFavorite = btnFavorite;
  }

  public abstract void setMainActivity(@Nullable MainActivity mainActivity);

  @Nullable
  public MainActivity getMainActivity() {
    return mMainActivity;
  }

  public abstract void setMainViewModel(@Nullable MainViewModel mainViewModel);

  @Nullable
  public MainViewModel getMainViewModel() {
    return mMainViewModel;
  }

  public abstract void setMemoViewModel(@Nullable MemoViewModel memoViewModel);

  @Nullable
  public MemoViewModel getMemoViewModel() {
    return mMemoViewModel;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_main, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityMainBinding>inflateInternal(inflater, R.layout.activity_main, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_main, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityMainBinding>inflateInternal(inflater, R.layout.activity_main, null, false, component);
  }

  public static ActivityMainBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityMainBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityMainBinding)bind(component, view, R.layout.activity_main);
  }
}
